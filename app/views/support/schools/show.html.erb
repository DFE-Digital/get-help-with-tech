<% content_for :title, "#{@school.name} â€“ Support" %>
<%- content_for :before_content do %>
  <%= breadcrumbs([{ "Home" => root_path },
    { 'Support home' => support_home_path },
    { t('page_titles.support_responsible_bodies') => support_responsible_bodies_path },
    { @school.responsible_body.name => support_responsible_body_path(@school.responsible_body) },
    @school.name,
  ]) %>
<% end %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <h1 class="govuk-heading-xl">
      <span class="govuk-caption-xl"><%= @school.responsible_body.name %></span>
      <%= @school.name %>
    </h1>
  </div>
</div>

<% if @school.gias_status_closed? %>
  <%= govuk_warning(text: "This #{@school.institution_type} has permanently closed") %>
<% end %>

<%= render GovukComponent::Tabs.new(title: 'Contents') do |component| %>
  <% component.slot(:tab, title: 'Overview') do %>
    <h2 class="govuk-heading-l">Overview</h2>

    <%= render Support::SchoolDetailsSummaryListComponent.new(school: @school, viewer: @current_user) %>

    <%- if @school.extra_mobile_data_requests.present? %>
      <h2 class="govuk-heading-l govuk-!-margin-top-9">Mobile data requests</h2>
      <%= render Support::ExtraMobileDataRequestsSummaryListComponent.new(requests: @school.extra_mobile_data_requests) %>
    <%- end %>
  <% end %>

  <% component.slot(:tab, title: 'Users') do %>
    <h2 class="govuk-heading-l">Users</h2>

    <% if policy(User).new? && @school.can_invite_users? %>
      <%= govuk_button_link_to 'Invite a new user', new_support_school_user_path(school_urn: @school.urn) %>
    <% end %>

    <% if @users.present? %>
      <% @users.each do |user| %>
        <div class="user">
          <h3 class="govuk-heading-m govuk-!-font-size-27 govuk-!-margin-bottom-2">
            <%= govuk_link_to user.full_name, support_user_path(user) %>
          </h3>
          <p class="govuk-body">
            <%= govuk_link_to "Edit user<span class=\"govuk-visually-hidden\"> #{user.full_name}</span>".html_safe, edit_support_user_path(user) %>
          </p>
          <%= render Support::UserPreviewSummaryListComponent.new(user: user) %>
        </div>
      <% end %>
    <% else %>
      <p class="govuk-body">None</p>
    <% end %>
  <% end %>

  <% component.slot(:tab, title: 'Notifications') do %>
    <h2 class="govuk-heading-l">Notifications</h2>

    <% if @email_audits.present? %>
      <%= render Support::EmailAuditListComponent.new(@email_audits) %>
    <% else %>
      <p class="govuk-body">None</p>
    <% end %>
  <% end %>

  <% component.slot(:tab, title: 'Timeline') do %>
    <h2 class="govuk-heading-l">Timeline</h2>

    <table class="govuk-table">
      <thead class="govuk-table__head">
        <tr class="govuk-table__row">
          <th scope="col" class="govuk-table__header">Time</th>
          <th scope="col" class="govuk-table__header">Field</th>
          <th scope="col" class="govuk-table__header">From</th>
          <th scope="col" class="govuk-table__header">To</th>
        </tr>
      </thead>

      <tbody class="govuk-table__body">
        <% @timeline.changesets.each do |changeset| %>
          <% changeset.changes.each_with_index do |(field, diffs), index| %>
            <tr class="govuk-table__row">
              <% if index.zero? %>
                <td class="govuk-table__cell" rowspan="<%= changeset.size %>"><%= changeset.updated_at.to_s(:govuk_date_and_time) %></td>
              <% end %>

              <td class="govuk-table__cell"><%= t("#{changeset.item_type}_#{field}", scope: [:components, :timeline, :field]) %></td>

              <% diffs.each do |diff| %>
                <td class="govuk-table__cell">
                  <span>
                    <% if diff.present? %>
                      <%= diff %>
                    <% else %>
                      Blank
                    <% end %>
                  </span>
                </td>
              <% end %>
            </tr>
          <% end %>
        <% end %>
      </tbody>
    </table>
  <% end %>

  <% component.slot(:tab, title: "Related schools (#{@school.school_links.count})") do %>
    <h2 class="govuk-heading-l">Related schools</h2>

    <% if @school.school_links.present? %>
      <table class="govuk-table">
        <thead class="govuk-table__head">
          <tr class="govuk-table__row">
            <th scope="col" class="govuk-table__header">URN</th>
            <th scope="col" class="govuk-table__header">Relation</th>
          </tr>
        </thead>

        <tbody class="govuk-table__body">
          <% @school.school_links.each do |school_link| %>
            <tr class="govuk-table__row">
              <td class="govuk-table__cell"><%= link_to_urn_or_ukprn_otherwise_identifier(school_link.urn) %></td>
              <td class="govuk-table__cell"><%= SchoolLink.translate_enum_value(:link_type, school_link.link_type) %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% else %>
      <p class="govuk-body">
        There are no related schools
      </p>
    <% end %>
  <% end %>
<% end %>
